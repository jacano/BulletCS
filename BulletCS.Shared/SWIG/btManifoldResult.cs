//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btManifoldResult : btDiscreteCollisionDetectorInterface.Result {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal btManifoldResult(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BulletPINVOKE.btManifoldResult_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btManifoldResult obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btManifoldResult() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btManifoldResult(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public btManifoldResult() : this(BulletPINVOKE.new_btManifoldResult__SWIG_0(), true) {
  }

  public btManifoldResult(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap) : this(BulletPINVOKE.new_btManifoldResult__SWIG_1(btCollisionObjectWrapper.getCPtr(body0Wrap), btCollisionObjectWrapper.getCPtr(body1Wrap)), true) {
  }

  public void setPersistentManifold(btPersistentManifold manifoldPtr) {
    BulletPINVOKE.btManifoldResult_setPersistentManifold(swigCPtr, btPersistentManifold.getCPtr(manifoldPtr));
  }

  public btPersistentManifold getPersistentManifold() {
    global::System.IntPtr cPtr = BulletPINVOKE.btManifoldResult_getPersistentManifold__SWIG_0(swigCPtr);
    btPersistentManifold ret = (cPtr == global::System.IntPtr.Zero) ? null : new btPersistentManifold(cPtr, false);
    return ret;
  }

  public override void setShapeIdentifiersA(int partId0, int index0) {
    BulletPINVOKE.btManifoldResult_setShapeIdentifiersA(swigCPtr, partId0, index0);
  }

  public override void setShapeIdentifiersB(int partId1, int index1) {
    BulletPINVOKE.btManifoldResult_setShapeIdentifiersB(swigCPtr, partId1, index1);
  }

  public override void addContactPoint(btVector3 normalOnBInWorld, btVector3 pointInWorld, float depth) {
    BulletPINVOKE.btManifoldResult_addContactPoint(swigCPtr, btVector3.getCPtr(normalOnBInWorld), btVector3.getCPtr(pointInWorld), depth);
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public void refreshContactPoints() {
    BulletPINVOKE.btManifoldResult_refreshContactPoints(swigCPtr);
  }

  public btCollisionObjectWrapper getBody0Wrap() {
    global::System.IntPtr cPtr = BulletPINVOKE.btManifoldResult_getBody0Wrap(swigCPtr);
    btCollisionObjectWrapper ret = (cPtr == global::System.IntPtr.Zero) ? null : new btCollisionObjectWrapper(cPtr, false);
    return ret;
  }

  public btCollisionObjectWrapper getBody1Wrap() {
    global::System.IntPtr cPtr = BulletPINVOKE.btManifoldResult_getBody1Wrap(swigCPtr);
    btCollisionObjectWrapper ret = (cPtr == global::System.IntPtr.Zero) ? null : new btCollisionObjectWrapper(cPtr, false);
    return ret;
  }

  public void setBody0Wrap(btCollisionObjectWrapper obj0Wrap) {
    BulletPINVOKE.btManifoldResult_setBody0Wrap(swigCPtr, btCollisionObjectWrapper.getCPtr(obj0Wrap));
  }

  public void setBody1Wrap(btCollisionObjectWrapper obj1Wrap) {
    BulletPINVOKE.btManifoldResult_setBody1Wrap(swigCPtr, btCollisionObjectWrapper.getCPtr(obj1Wrap));
  }

  public btCollisionObject getBody0Internal() {
    global::System.IntPtr cPtr = BulletPINVOKE.btManifoldResult_getBody0Internal(swigCPtr);
    btCollisionObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new btCollisionObject(cPtr, false);
    return ret;
  }

  public btCollisionObject getBody1Internal() {
    global::System.IntPtr cPtr = BulletPINVOKE.btManifoldResult_getBody1Internal(swigCPtr);
    btCollisionObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new btCollisionObject(cPtr, false);
    return ret;
  }

  public static float calculateCombinedRestitution(btCollisionObject body0, btCollisionObject body1) {
    float ret = BulletPINVOKE.btManifoldResult_calculateCombinedRestitution(btCollisionObject.getCPtr(body0), btCollisionObject.getCPtr(body1));
    return ret;
  }

  public static float calculateCombinedFriction(btCollisionObject body0, btCollisionObject body1) {
    float ret = BulletPINVOKE.btManifoldResult_calculateCombinedFriction(btCollisionObject.getCPtr(body0), btCollisionObject.getCPtr(body1));
    return ret;
  }

}

}
