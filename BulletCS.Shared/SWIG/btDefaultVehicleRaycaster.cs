//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btDefaultVehicleRaycaster : btVehicleRaycaster {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal btDefaultVehicleRaycaster(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BulletPINVOKE.btDefaultVehicleRaycaster_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btDefaultVehicleRaycaster obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btDefaultVehicleRaycaster() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btDefaultVehicleRaycaster(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public btDefaultVehicleRaycaster(btDynamicsWorld world) : this(BulletPINVOKE.new_btDefaultVehicleRaycaster(btDynamicsWorld.getCPtr(world)), true) {
  }

  public override SWIGTYPE_p_void castRay(btVector3 from, btVector3 to, btVehicleRaycaster.btVehicleRaycasterResult result) {
    global::System.IntPtr cPtr = BulletPINVOKE.btDefaultVehicleRaycaster_castRay(swigCPtr, btVector3.getCPtr(from), btVector3.getCPtr(to), btVehicleRaycaster.btVehicleRaycasterResult.getCPtr(result));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
