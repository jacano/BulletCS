//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btHinge2Constraint : btGeneric6DofSpringConstraint {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal btHinge2Constraint(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BulletPINVOKE.btHinge2Constraint_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btHinge2Constraint obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btHinge2Constraint() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btHinge2Constraint(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public btHinge2Constraint(btRigidBody rbA, btRigidBody rbB, btVector3 anchor, btVector3 axis1, btVector3 axis2) : this(BulletPINVOKE.new_btHinge2Constraint(btRigidBody.getCPtr(rbA), btRigidBody.getCPtr(rbB), btVector3.getCPtr(anchor), btVector3.getCPtr(axis1), btVector3.getCPtr(axis2)), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public btVector3 getAnchor() {
    btVector3 ret = new btVector3(BulletPINVOKE.btHinge2Constraint_getAnchor(swigCPtr), false);
    return ret;
  }

  public btVector3 getAnchor2() {
    btVector3 ret = new btVector3(BulletPINVOKE.btHinge2Constraint_getAnchor2(swigCPtr), false);
    return ret;
  }

  public btVector3 getAxis1() {
    btVector3 ret = new btVector3(BulletPINVOKE.btHinge2Constraint_getAxis1(swigCPtr), false);
    return ret;
  }

  public btVector3 getAxis2() {
    btVector3 ret = new btVector3(BulletPINVOKE.btHinge2Constraint_getAxis2(swigCPtr), false);
    return ret;
  }

  public float getAngle1() {
    float ret = BulletPINVOKE.btHinge2Constraint_getAngle1(swigCPtr);
    return ret;
  }

  public float getAngle2() {
    float ret = BulletPINVOKE.btHinge2Constraint_getAngle2(swigCPtr);
    return ret;
  }

  public void setUpperLimit(float ang1max) {
    BulletPINVOKE.btHinge2Constraint_setUpperLimit(swigCPtr, ang1max);
  }

  public void setLowerLimit(float ang1min) {
    BulletPINVOKE.btHinge2Constraint_setLowerLimit(swigCPtr, ang1min);
  }

}

}
