//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btQuantizedBvhDoubleData : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btQuantizedBvhDoubleData(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btQuantizedBvhDoubleData obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btQuantizedBvhDoubleData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btQuantizedBvhDoubleData(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public btVector3DoubleData m_bvhAabbMin {
    set {
      BulletPINVOKE.btQuantizedBvhDoubleData_m_bvhAabbMin_set(swigCPtr, btVector3DoubleData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btQuantizedBvhDoubleData_m_bvhAabbMin_get(swigCPtr);
      btVector3DoubleData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3DoubleData(cPtr, false);
      return ret;
    } 
  }

  public btVector3DoubleData m_bvhAabbMax {
    set {
      BulletPINVOKE.btQuantizedBvhDoubleData_m_bvhAabbMax_set(swigCPtr, btVector3DoubleData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btQuantizedBvhDoubleData_m_bvhAabbMax_get(swigCPtr);
      btVector3DoubleData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3DoubleData(cPtr, false);
      return ret;
    } 
  }

  public btVector3DoubleData m_bvhQuantization {
    set {
      BulletPINVOKE.btQuantizedBvhDoubleData_m_bvhQuantization_set(swigCPtr, btVector3DoubleData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btQuantizedBvhDoubleData_m_bvhQuantization_get(swigCPtr);
      btVector3DoubleData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3DoubleData(cPtr, false);
      return ret;
    } 
  }

  public int m_curNodeIndex {
    set {
      BulletPINVOKE.btQuantizedBvhDoubleData_m_curNodeIndex_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btQuantizedBvhDoubleData_m_curNodeIndex_get(swigCPtr);
      return ret;
    } 
  }

  public int m_useQuantization {
    set {
      BulletPINVOKE.btQuantizedBvhDoubleData_m_useQuantization_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btQuantizedBvhDoubleData_m_useQuantization_get(swigCPtr);
      return ret;
    } 
  }

  public int m_numContiguousLeafNodes {
    set {
      BulletPINVOKE.btQuantizedBvhDoubleData_m_numContiguousLeafNodes_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btQuantizedBvhDoubleData_m_numContiguousLeafNodes_get(swigCPtr);
      return ret;
    } 
  }

  public int m_numQuantizedContiguousNodes {
    set {
      BulletPINVOKE.btQuantizedBvhDoubleData_m_numQuantizedContiguousNodes_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btQuantizedBvhDoubleData_m_numQuantizedContiguousNodes_get(swigCPtr);
      return ret;
    } 
  }

  public btOptimizedBvhNodeDoubleData m_contiguousNodesPtr {
    set {
      BulletPINVOKE.btQuantizedBvhDoubleData_m_contiguousNodesPtr_set(swigCPtr, btOptimizedBvhNodeDoubleData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btQuantizedBvhDoubleData_m_contiguousNodesPtr_get(swigCPtr);
      btOptimizedBvhNodeDoubleData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btOptimizedBvhNodeDoubleData(cPtr, false);
      return ret;
    } 
  }

  public btQuantizedBvhNodeData m_quantizedContiguousNodesPtr {
    set {
      BulletPINVOKE.btQuantizedBvhDoubleData_m_quantizedContiguousNodesPtr_set(swigCPtr, btQuantizedBvhNodeData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btQuantizedBvhDoubleData_m_quantizedContiguousNodesPtr_get(swigCPtr);
      btQuantizedBvhNodeData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btQuantizedBvhNodeData(cPtr, false);
      return ret;
    } 
  }

  public int m_traversalMode {
    set {
      BulletPINVOKE.btQuantizedBvhDoubleData_m_traversalMode_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btQuantizedBvhDoubleData_m_traversalMode_get(swigCPtr);
      return ret;
    } 
  }

  public int m_numSubtreeHeaders {
    set {
      BulletPINVOKE.btQuantizedBvhDoubleData_m_numSubtreeHeaders_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btQuantizedBvhDoubleData_m_numSubtreeHeaders_get(swigCPtr);
      return ret;
    } 
  }

  public btBvhSubtreeInfoData m_subTreeInfoPtr {
    set {
      BulletPINVOKE.btQuantizedBvhDoubleData_m_subTreeInfoPtr_set(swigCPtr, btBvhSubtreeInfoData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btQuantizedBvhDoubleData_m_subTreeInfoPtr_get(swigCPtr);
      btBvhSubtreeInfoData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btBvhSubtreeInfoData(cPtr, false);
      return ret;
    } 
  }

  public btQuantizedBvhDoubleData() : this(BulletPINVOKE.new_btQuantizedBvhDoubleData(), true) {
  }

}

}
