//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btJacobianEntry : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btJacobianEntry(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btJacobianEntry obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btJacobianEntry() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btJacobianEntry(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public btJacobianEntry() : this(BulletPINVOKE.new_btJacobianEntry__SWIG_0(), true) {
  }

  public btJacobianEntry(btMatrix3x3 world2A, btMatrix3x3 world2B, btVector3 rel_pos1, btVector3 rel_pos2, btVector3 jointAxis, btVector3 inertiaInvA, float massInvA, btVector3 inertiaInvB, float massInvB) : this(BulletPINVOKE.new_btJacobianEntry__SWIG_1(btMatrix3x3.getCPtr(world2A), btMatrix3x3.getCPtr(world2B), btVector3.getCPtr(rel_pos1), btVector3.getCPtr(rel_pos2), btVector3.getCPtr(jointAxis), btVector3.getCPtr(inertiaInvA), massInvA, btVector3.getCPtr(inertiaInvB), massInvB), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public btJacobianEntry(btVector3 jointAxis, btMatrix3x3 world2A, btMatrix3x3 world2B, btVector3 inertiaInvA, btVector3 inertiaInvB) : this(BulletPINVOKE.new_btJacobianEntry__SWIG_2(btVector3.getCPtr(jointAxis), btMatrix3x3.getCPtr(world2A), btMatrix3x3.getCPtr(world2B), btVector3.getCPtr(inertiaInvA), btVector3.getCPtr(inertiaInvB)), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public btJacobianEntry(btVector3 axisInA, btVector3 axisInB, btVector3 inertiaInvA, btVector3 inertiaInvB) : this(BulletPINVOKE.new_btJacobianEntry__SWIG_3(btVector3.getCPtr(axisInA), btVector3.getCPtr(axisInB), btVector3.getCPtr(inertiaInvA), btVector3.getCPtr(inertiaInvB)), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public btJacobianEntry(btMatrix3x3 world2A, btVector3 rel_pos1, btVector3 rel_pos2, btVector3 jointAxis, btVector3 inertiaInvA, float massInvA) : this(BulletPINVOKE.new_btJacobianEntry__SWIG_4(btMatrix3x3.getCPtr(world2A), btVector3.getCPtr(rel_pos1), btVector3.getCPtr(rel_pos2), btVector3.getCPtr(jointAxis), btVector3.getCPtr(inertiaInvA), massInvA), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public float getDiagonal() {
    float ret = BulletPINVOKE.btJacobianEntry_getDiagonal(swigCPtr);
    return ret;
  }

  public float getNonDiagonal(btJacobianEntry jacB, float massInvA) {
    float ret = BulletPINVOKE.btJacobianEntry_getNonDiagonal__SWIG_0(swigCPtr, btJacobianEntry.getCPtr(jacB), massInvA);
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public float getNonDiagonal(btJacobianEntry jacB, float massInvA, float massInvB) {
    float ret = BulletPINVOKE.btJacobianEntry_getNonDiagonal__SWIG_1(swigCPtr, btJacobianEntry.getCPtr(jacB), massInvA, massInvB);
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public float getRelativeVelocity(btVector3 linvelA, btVector3 angvelA, btVector3 linvelB, btVector3 angvelB) {
    float ret = BulletPINVOKE.btJacobianEntry_getRelativeVelocity(swigCPtr, btVector3.getCPtr(linvelA), btVector3.getCPtr(angvelA), btVector3.getCPtr(linvelB), btVector3.getCPtr(angvelB));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public btVector3 m_linearJointAxis {
    set {
      BulletPINVOKE.btJacobianEntry_m_linearJointAxis_set(swigCPtr, btVector3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btJacobianEntry_m_linearJointAxis_get(swigCPtr);
      btVector3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3(cPtr, false);
      return ret;
    } 
  }

  public btVector3 m_aJ {
    set {
      BulletPINVOKE.btJacobianEntry_m_aJ_set(swigCPtr, btVector3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btJacobianEntry_m_aJ_get(swigCPtr);
      btVector3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3(cPtr, false);
      return ret;
    } 
  }

  public btVector3 m_bJ {
    set {
      BulletPINVOKE.btJacobianEntry_m_bJ_set(swigCPtr, btVector3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btJacobianEntry_m_bJ_get(swigCPtr);
      btVector3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3(cPtr, false);
      return ret;
    } 
  }

  public btVector3 m_0MinvJt {
    set {
      BulletPINVOKE.btJacobianEntry_m_0MinvJt_set(swigCPtr, btVector3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btJacobianEntry_m_0MinvJt_get(swigCPtr);
      btVector3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3(cPtr, false);
      return ret;
    } 
  }

  public btVector3 m_1MinvJt {
    set {
      BulletPINVOKE.btJacobianEntry_m_1MinvJt_set(swigCPtr, btVector3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btJacobianEntry_m_1MinvJt_get(swigCPtr);
      btVector3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3(cPtr, false);
      return ret;
    } 
  }

  public float m_Adiag {
    set {
      BulletPINVOKE.btJacobianEntry_m_Adiag_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btJacobianEntry_m_Adiag_get(swigCPtr);
      return ret;
    } 
  }

}

}
