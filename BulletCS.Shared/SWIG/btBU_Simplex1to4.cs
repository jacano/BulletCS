//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btBU_Simplex1to4 : btPolyhedralConvexAabbCachingShape {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal btBU_Simplex1to4(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BulletPINVOKE.btBU_Simplex1to4_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btBU_Simplex1to4 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btBU_Simplex1to4() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btBU_Simplex1to4(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public btBU_Simplex1to4() : this(BulletPINVOKE.new_btBU_Simplex1to4__SWIG_0(), true) {
  }

  public btBU_Simplex1to4(btVector3 pt0) : this(BulletPINVOKE.new_btBU_Simplex1to4__SWIG_1(btVector3.getCPtr(pt0)), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public btBU_Simplex1to4(btVector3 pt0, btVector3 pt1) : this(BulletPINVOKE.new_btBU_Simplex1to4__SWIG_2(btVector3.getCPtr(pt0), btVector3.getCPtr(pt1)), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public btBU_Simplex1to4(btVector3 pt0, btVector3 pt1, btVector3 pt2) : this(BulletPINVOKE.new_btBU_Simplex1to4__SWIG_3(btVector3.getCPtr(pt0), btVector3.getCPtr(pt1), btVector3.getCPtr(pt2)), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public btBU_Simplex1to4(btVector3 pt0, btVector3 pt1, btVector3 pt2, btVector3 pt3) : this(BulletPINVOKE.new_btBU_Simplex1to4__SWIG_4(btVector3.getCPtr(pt0), btVector3.getCPtr(pt1), btVector3.getCPtr(pt2), btVector3.getCPtr(pt3)), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    BulletPINVOKE.btBU_Simplex1to4_reset(swigCPtr);
  }

  public override void getAabb(btTransform t, btVector3 aabbMin, btVector3 aabbMax) {
    BulletPINVOKE.btBU_Simplex1to4_getAabb(swigCPtr, btTransform.getCPtr(t), btVector3.getCPtr(aabbMin), btVector3.getCPtr(aabbMax));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addVertex(btVector3 pt) {
    BulletPINVOKE.btBU_Simplex1to4_addVertex(swigCPtr, btVector3.getCPtr(pt));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override int getNumVertices() {
    int ret = BulletPINVOKE.btBU_Simplex1to4_getNumVertices(swigCPtr);
    return ret;
  }

  public override int getNumEdges() {
    int ret = BulletPINVOKE.btBU_Simplex1to4_getNumEdges(swigCPtr);
    return ret;
  }

  public override void getEdge(int i, btVector3 pa, btVector3 pb) {
    BulletPINVOKE.btBU_Simplex1to4_getEdge(swigCPtr, i, btVector3.getCPtr(pa), btVector3.getCPtr(pb));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void getVertex(int i, btVector3 vtx) {
    BulletPINVOKE.btBU_Simplex1to4_getVertex(swigCPtr, i, btVector3.getCPtr(vtx));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override int getNumPlanes() {
    int ret = BulletPINVOKE.btBU_Simplex1to4_getNumPlanes(swigCPtr);
    return ret;
  }

  public override void getPlane(btVector3 planeNormal, btVector3 planeSupport, int i) {
    BulletPINVOKE.btBU_Simplex1to4_getPlane(swigCPtr, btVector3.getCPtr(planeNormal), btVector3.getCPtr(planeSupport), i);
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual int getIndex(int i) {
    int ret = BulletPINVOKE.btBU_Simplex1to4_getIndex(swigCPtr, i);
    return ret;
  }

  public override bool isInside(btVector3 pt, float tolerance) {
    bool ret = BulletPINVOKE.btBU_Simplex1to4_isInside(swigCPtr, btVector3.getCPtr(pt), tolerance);
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override string getName() {
    string ret = BulletPINVOKE.btBU_Simplex1to4_getName(swigCPtr);
    return ret;
  }

}

}
