//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btVehicleRaycaster : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btVehicleRaycaster(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btVehicleRaycaster obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btVehicleRaycaster() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btVehicleRaycaster(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public class btVehicleRaycasterResult : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    internal btVehicleRaycasterResult(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btVehicleRaycasterResult obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~btVehicleRaycasterResult() {
      Dispose();
    }
  
    public virtual void Dispose() {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            BulletPINVOKE.delete_btVehicleRaycaster_btVehicleRaycasterResult(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
        global::System.GC.SuppressFinalize(this);
      }
    }
  
    public btVehicleRaycasterResult() : this(BulletPINVOKE.new_btVehicleRaycaster_btVehicleRaycasterResult(), true) {
    }
  
    public btVector3 m_hitPointInWorld {
      set {
        BulletPINVOKE.btVehicleRaycaster_btVehicleRaycasterResult_m_hitPointInWorld_set(swigCPtr, btVector3.getCPtr(value));
      } 
      get {
        global::System.IntPtr cPtr = BulletPINVOKE.btVehicleRaycaster_btVehicleRaycasterResult_m_hitPointInWorld_get(swigCPtr);
        btVector3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3(cPtr, false);
        return ret;
      } 
    }
  
    public btVector3 m_hitNormalInWorld {
      set {
        BulletPINVOKE.btVehicleRaycaster_btVehicleRaycasterResult_m_hitNormalInWorld_set(swigCPtr, btVector3.getCPtr(value));
      } 
      get {
        global::System.IntPtr cPtr = BulletPINVOKE.btVehicleRaycaster_btVehicleRaycasterResult_m_hitNormalInWorld_get(swigCPtr);
        btVector3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3(cPtr, false);
        return ret;
      } 
    }
  
    public float m_distFraction {
      set {
        BulletPINVOKE.btVehicleRaycaster_btVehicleRaycasterResult_m_distFraction_set(swigCPtr, value);
      } 
      get {
        float ret = BulletPINVOKE.btVehicleRaycaster_btVehicleRaycasterResult_m_distFraction_get(swigCPtr);
        return ret;
      } 
    }
  
  }

  public virtual SWIGTYPE_p_void castRay(btVector3 from, btVector3 to, btVehicleRaycaster.btVehicleRaycasterResult result) {
    global::System.IntPtr cPtr = BulletPINVOKE.btVehicleRaycaster_castRay(swigCPtr, btVector3.getCPtr(from), btVector3.getCPtr(to), btVehicleRaycaster.btVehicleRaycasterResult.getCPtr(result));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
