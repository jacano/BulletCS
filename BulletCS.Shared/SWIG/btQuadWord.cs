//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btQuadWord : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btQuadWord(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btQuadWord obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btQuadWord() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btQuadWord(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float getX() {
    float ret = BulletPINVOKE.btQuadWord_getX(swigCPtr);
    return ret;
  }

  public float getY() {
    float ret = BulletPINVOKE.btQuadWord_getY(swigCPtr);
    return ret;
  }

  public float getZ() {
    float ret = BulletPINVOKE.btQuadWord_getZ(swigCPtr);
    return ret;
  }

  public void setX(float _x) {
    BulletPINVOKE.btQuadWord_setX(swigCPtr, _x);
  }

  public void setY(float _y) {
    BulletPINVOKE.btQuadWord_setY(swigCPtr, _y);
  }

  public void setZ(float _z) {
    BulletPINVOKE.btQuadWord_setZ(swigCPtr, _z);
  }

  public void setW(float _w) {
    BulletPINVOKE.btQuadWord_setW(swigCPtr, _w);
  }

  public float x() {
    float ret = BulletPINVOKE.btQuadWord_x(swigCPtr);
    return ret;
  }

  public float y() {
    float ret = BulletPINVOKE.btQuadWord_y(swigCPtr);
    return ret;
  }

  public float z() {
    float ret = BulletPINVOKE.btQuadWord_z(swigCPtr);
    return ret;
  }

  public float w() {
    float ret = BulletPINVOKE.btQuadWord_w(swigCPtr);
    return ret;
  }

  public void setValue(float _x, float _y, float _z) {
    BulletPINVOKE.btQuadWord_setValue__SWIG_0(swigCPtr, _x, _y, _z);
  }

  public void setValue(float _x, float _y, float _z, float _w) {
    BulletPINVOKE.btQuadWord_setValue__SWIG_1(swigCPtr, _x, _y, _z, _w);
  }

  public btQuadWord() : this(BulletPINVOKE.new_btQuadWord__SWIG_0(), true) {
  }

  public btQuadWord(float _x, float _y, float _z) : this(BulletPINVOKE.new_btQuadWord__SWIG_1(_x, _y, _z), true) {
  }

  public btQuadWord(float _x, float _y, float _z, float _w) : this(BulletPINVOKE.new_btQuadWord__SWIG_2(_x, _y, _z, _w), true) {
  }

  public void setMax(btQuadWord other) {
    BulletPINVOKE.btQuadWord_setMax(swigCPtr, btQuadWord.getCPtr(other));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setMin(btQuadWord other) {
    BulletPINVOKE.btQuadWord_setMin(swigCPtr, btQuadWord.getCPtr(other));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
