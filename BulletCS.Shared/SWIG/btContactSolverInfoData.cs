//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btContactSolverInfoData : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btContactSolverInfoData(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btContactSolverInfoData obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btContactSolverInfoData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btContactSolverInfoData(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float m_tau {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_tau_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_tau_get(swigCPtr);
      return ret;
    } 
  }

  public float m_damping {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_damping_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_damping_get(swigCPtr);
      return ret;
    } 
  }

  public float m_friction {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_friction_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_friction_get(swigCPtr);
      return ret;
    } 
  }

  public float m_timeStep {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_timeStep_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_timeStep_get(swigCPtr);
      return ret;
    } 
  }

  public float m_restitution {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_restitution_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_restitution_get(swigCPtr);
      return ret;
    } 
  }

  public int m_numIterations {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_numIterations_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btContactSolverInfoData_m_numIterations_get(swigCPtr);
      return ret;
    } 
  }

  public float m_maxErrorReduction {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_maxErrorReduction_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_maxErrorReduction_get(swigCPtr);
      return ret;
    } 
  }

  public float m_sor {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_sor_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_sor_get(swigCPtr);
      return ret;
    } 
  }

  public float m_erp {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_erp_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_erp_get(swigCPtr);
      return ret;
    } 
  }

  public float m_erp2 {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_erp2_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_erp2_get(swigCPtr);
      return ret;
    } 
  }

  public float m_globalCfm {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_globalCfm_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_globalCfm_get(swigCPtr);
      return ret;
    } 
  }

  public int m_splitImpulse {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_splitImpulse_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btContactSolverInfoData_m_splitImpulse_get(swigCPtr);
      return ret;
    } 
  }

  public float m_splitImpulsePenetrationThreshold {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_splitImpulsePenetrationThreshold_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_splitImpulsePenetrationThreshold_get(swigCPtr);
      return ret;
    } 
  }

  public float m_splitImpulseTurnErp {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_splitImpulseTurnErp_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_splitImpulseTurnErp_get(swigCPtr);
      return ret;
    } 
  }

  public float m_linearSlop {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_linearSlop_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_linearSlop_get(swigCPtr);
      return ret;
    } 
  }

  public float m_warmstartingFactor {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_warmstartingFactor_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_warmstartingFactor_get(swigCPtr);
      return ret;
    } 
  }

  public int m_solverMode {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_solverMode_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btContactSolverInfoData_m_solverMode_get(swigCPtr);
      return ret;
    } 
  }

  public int m_restingContactRestitutionThreshold {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_restingContactRestitutionThreshold_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btContactSolverInfoData_m_restingContactRestitutionThreshold_get(swigCPtr);
      return ret;
    } 
  }

  public int m_minimumSolverBatchSize {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_minimumSolverBatchSize_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btContactSolverInfoData_m_minimumSolverBatchSize_get(swigCPtr);
      return ret;
    } 
  }

  public float m_maxGyroscopicForce {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_maxGyroscopicForce_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_maxGyroscopicForce_get(swigCPtr);
      return ret;
    } 
  }

  public float m_singleAxisRollingFrictionThreshold {
    set {
      BulletPINVOKE.btContactSolverInfoData_m_singleAxisRollingFrictionThreshold_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btContactSolverInfoData_m_singleAxisRollingFrictionThreshold_get(swigCPtr);
      return ret;
    } 
  }

  public btContactSolverInfoData() : this(BulletPINVOKE.new_btContactSolverInfoData(), true) {
  }

}

}
