//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btSphereSphereCollisionAlgorithm : btActivatingCollisionAlgorithm {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal btSphereSphereCollisionAlgorithm(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BulletPINVOKE.btSphereSphereCollisionAlgorithm_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btSphereSphereCollisionAlgorithm obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btSphereSphereCollisionAlgorithm() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btSphereSphereCollisionAlgorithm(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public btSphereSphereCollisionAlgorithm(btPersistentManifold mf, btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper col0Wrap, btCollisionObjectWrapper col1Wrap) : this(BulletPINVOKE.new_btSphereSphereCollisionAlgorithm__SWIG_0(btPersistentManifold.getCPtr(mf), btCollisionAlgorithmConstructionInfo.getCPtr(ci), btCollisionObjectWrapper.getCPtr(col0Wrap), btCollisionObjectWrapper.getCPtr(col1Wrap)), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public btSphereSphereCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci) : this(BulletPINVOKE.new_btSphereSphereCollisionAlgorithm__SWIG_1(btCollisionAlgorithmConstructionInfo.getCPtr(ci)), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void processCollision(btCollisionObjectWrapper body0Wrap, btCollisionObjectWrapper body1Wrap, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
    BulletPINVOKE.btSphereSphereCollisionAlgorithm_processCollision(swigCPtr, btCollisionObjectWrapper.getCPtr(body0Wrap), btCollisionObjectWrapper.getCPtr(body1Wrap), btDispatcherInfo.getCPtr(dispatchInfo), btManifoldResult.getCPtr(resultOut));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override float calculateTimeOfImpact(btCollisionObject body0, btCollisionObject body1, btDispatcherInfo dispatchInfo, btManifoldResult resultOut) {
    float ret = BulletPINVOKE.btSphereSphereCollisionAlgorithm_calculateTimeOfImpact(swigCPtr, btCollisionObject.getCPtr(body0), btCollisionObject.getCPtr(body1), btDispatcherInfo.getCPtr(dispatchInfo), btManifoldResult.getCPtr(resultOut));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void getAllContactManifolds(SWIGTYPE_p_btAlignedObjectArrayT_btPersistentManifold_p_t manifoldArray) {
    BulletPINVOKE.btSphereSphereCollisionAlgorithm_getAllContactManifolds(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_btPersistentManifold_p_t.getCPtr(manifoldArray));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public class CreateFunc : btCollisionAlgorithmCreateFunc {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  
    internal CreateFunc(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BulletPINVOKE.btSphereSphereCollisionAlgorithm_CreateFunc_SWIGUpcast(cPtr), cMemoryOwn) {
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CreateFunc obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~CreateFunc() {
      Dispose();
    }
  
    public override void Dispose() {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            BulletPINVOKE.delete_btSphereSphereCollisionAlgorithm_CreateFunc(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
        global::System.GC.SuppressFinalize(this);
        base.Dispose();
      }
    }
  
    public override btCollisionAlgorithm CreateCollisionAlgorithm(btCollisionAlgorithmConstructionInfo ci, btCollisionObjectWrapper col0Wrap, btCollisionObjectWrapper col1Wrap) {
      global::System.IntPtr cPtr = BulletPINVOKE.btSphereSphereCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(swigCPtr, btCollisionAlgorithmConstructionInfo.getCPtr(ci), btCollisionObjectWrapper.getCPtr(col0Wrap), btCollisionObjectWrapper.getCPtr(col1Wrap));
      btCollisionAlgorithm ret = (cPtr == global::System.IntPtr.Zero) ? null : new btCollisionAlgorithm(cPtr, false);
      if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    }
  
    public CreateFunc() : this(BulletPINVOKE.new_btSphereSphereCollisionAlgorithm_CreateFunc(), true) {
    }
  
  }

}

}
