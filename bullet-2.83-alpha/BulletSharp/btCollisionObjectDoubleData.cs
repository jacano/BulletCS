//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btCollisionObjectDoubleData : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btCollisionObjectDoubleData(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btCollisionObjectDoubleData obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btCollisionObjectDoubleData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btCollisionObjectDoubleData(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_void m_broadphaseHandle {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_broadphaseHandle_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btCollisionObjectDoubleData_m_broadphaseHandle_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_void m_collisionShape {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_collisionShape_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btCollisionObjectDoubleData_m_collisionShape_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public btCollisionShapeData m_rootCollisionShape {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_rootCollisionShape_set(swigCPtr, btCollisionShapeData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btCollisionObjectDoubleData_m_rootCollisionShape_get(swigCPtr);
      btCollisionShapeData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btCollisionShapeData(cPtr, false);
      return ret;
    } 
  }

  public string m_name {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_name_set(swigCPtr, value);
    } 
    get {
      string ret = BulletPINVOKE.btCollisionObjectDoubleData_m_name_get(swigCPtr);
      return ret;
    } 
  }

  public btTransformDoubleData m_worldTransform {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_worldTransform_set(swigCPtr, btTransformDoubleData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btCollisionObjectDoubleData_m_worldTransform_get(swigCPtr);
      btTransformDoubleData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btTransformDoubleData(cPtr, false);
      return ret;
    } 
  }

  public btTransformDoubleData m_interpolationWorldTransform {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_interpolationWorldTransform_set(swigCPtr, btTransformDoubleData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btCollisionObjectDoubleData_m_interpolationWorldTransform_get(swigCPtr);
      btTransformDoubleData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btTransformDoubleData(cPtr, false);
      return ret;
    } 
  }

  public btVector3DoubleData m_interpolationLinearVelocity {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_interpolationLinearVelocity_set(swigCPtr, btVector3DoubleData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btCollisionObjectDoubleData_m_interpolationLinearVelocity_get(swigCPtr);
      btVector3DoubleData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3DoubleData(cPtr, false);
      return ret;
    } 
  }

  public btVector3DoubleData m_interpolationAngularVelocity {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_interpolationAngularVelocity_set(swigCPtr, btVector3DoubleData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btCollisionObjectDoubleData_m_interpolationAngularVelocity_get(swigCPtr);
      btVector3DoubleData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3DoubleData(cPtr, false);
      return ret;
    } 
  }

  public btVector3DoubleData m_anisotropicFriction {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_anisotropicFriction_set(swigCPtr, btVector3DoubleData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btCollisionObjectDoubleData_m_anisotropicFriction_get(swigCPtr);
      btVector3DoubleData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3DoubleData(cPtr, false);
      return ret;
    } 
  }

  public double m_contactProcessingThreshold {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_contactProcessingThreshold_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btCollisionObjectDoubleData_m_contactProcessingThreshold_get(swigCPtr);
      return ret;
    } 
  }

  public double m_deactivationTime {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_deactivationTime_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btCollisionObjectDoubleData_m_deactivationTime_get(swigCPtr);
      return ret;
    } 
  }

  public double m_friction {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_friction_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btCollisionObjectDoubleData_m_friction_get(swigCPtr);
      return ret;
    } 
  }

  public double m_rollingFriction {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_rollingFriction_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btCollisionObjectDoubleData_m_rollingFriction_get(swigCPtr);
      return ret;
    } 
  }

  public double m_restitution {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_restitution_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btCollisionObjectDoubleData_m_restitution_get(swigCPtr);
      return ret;
    } 
  }

  public double m_hitFraction {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_hitFraction_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btCollisionObjectDoubleData_m_hitFraction_get(swigCPtr);
      return ret;
    } 
  }

  public double m_ccdSweptSphereRadius {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_ccdSweptSphereRadius_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btCollisionObjectDoubleData_m_ccdSweptSphereRadius_get(swigCPtr);
      return ret;
    } 
  }

  public double m_ccdMotionThreshold {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_ccdMotionThreshold_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btCollisionObjectDoubleData_m_ccdMotionThreshold_get(swigCPtr);
      return ret;
    } 
  }

  public int m_hasAnisotropicFriction {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_hasAnisotropicFriction_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btCollisionObjectDoubleData_m_hasAnisotropicFriction_get(swigCPtr);
      return ret;
    } 
  }

  public int m_collisionFlags {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_collisionFlags_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btCollisionObjectDoubleData_m_collisionFlags_get(swigCPtr);
      return ret;
    } 
  }

  public int m_islandTag1 {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_islandTag1_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btCollisionObjectDoubleData_m_islandTag1_get(swigCPtr);
      return ret;
    } 
  }

  public int m_companionId {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_companionId_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btCollisionObjectDoubleData_m_companionId_get(swigCPtr);
      return ret;
    } 
  }

  public int m_activationState1 {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_activationState1_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btCollisionObjectDoubleData_m_activationState1_get(swigCPtr);
      return ret;
    } 
  }

  public int m_internalType {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_internalType_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btCollisionObjectDoubleData_m_internalType_get(swigCPtr);
      return ret;
    } 
  }

  public int m_checkCollideWith {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_checkCollideWith_set(swigCPtr, value);
    } 
    get {
      int ret = BulletPINVOKE.btCollisionObjectDoubleData_m_checkCollideWith_get(swigCPtr);
      return ret;
    } 
  }

  public string m_padding {
    set {
      BulletPINVOKE.btCollisionObjectDoubleData_m_padding_set(swigCPtr, value);
    } 
    get {
      string ret = BulletPINVOKE.btCollisionObjectDoubleData_m_padding_get(swigCPtr);
      return ret;
    } 
  }

  public btCollisionObjectDoubleData() : this(BulletPINVOKE.new_btCollisionObjectDoubleData(), true) {
  }

}

}
