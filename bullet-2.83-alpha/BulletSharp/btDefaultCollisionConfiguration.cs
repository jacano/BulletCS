//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btDefaultCollisionConfiguration : btCollisionConfiguration {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal btDefaultCollisionConfiguration(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BulletPINVOKE.btDefaultCollisionConfiguration_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btDefaultCollisionConfiguration obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btDefaultCollisionConfiguration() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btDefaultCollisionConfiguration(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public btDefaultCollisionConfiguration(btDefaultCollisionConstructionInfo constructionInfo) : this(BulletPINVOKE.new_btDefaultCollisionConfiguration__SWIG_0(btDefaultCollisionConstructionInfo.getCPtr(constructionInfo)), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public btDefaultCollisionConfiguration() : this(BulletPINVOKE.new_btDefaultCollisionConfiguration__SWIG_1(), true) {
  }

  public override SWIGTYPE_p_btPoolAllocator getPersistentManifoldPool() {
    global::System.IntPtr cPtr = BulletPINVOKE.btDefaultCollisionConfiguration_getPersistentManifoldPool(swigCPtr);
    SWIGTYPE_p_btPoolAllocator ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_btPoolAllocator(cPtr, false);
    return ret;
  }

  public override SWIGTYPE_p_btPoolAllocator getCollisionAlgorithmPool() {
    global::System.IntPtr cPtr = BulletPINVOKE.btDefaultCollisionConfiguration_getCollisionAlgorithmPool(swigCPtr);
    SWIGTYPE_p_btPoolAllocator ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_btPoolAllocator(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_btVoronoiSimplexSolver getSimplexSolver() {
    global::System.IntPtr cPtr = BulletPINVOKE.btDefaultCollisionConfiguration_getSimplexSolver(swigCPtr);
    SWIGTYPE_p_btVoronoiSimplexSolver ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_btVoronoiSimplexSolver(cPtr, false);
    return ret;
  }

  public override btCollisionAlgorithmCreateFunc getCollisionAlgorithmCreateFunc(int proxyType0, int proxyType1) {
    global::System.IntPtr cPtr = BulletPINVOKE.btDefaultCollisionConfiguration_getCollisionAlgorithmCreateFunc(swigCPtr, proxyType0, proxyType1);
    btCollisionAlgorithmCreateFunc ret = (cPtr == global::System.IntPtr.Zero) ? null : new btCollisionAlgorithmCreateFunc(cPtr, false);
    return ret;
  }

  public void setConvexConvexMultipointIterations(int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
    BulletPINVOKE.btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_0(swigCPtr, numPerturbationIterations, minimumPointsPerturbationThreshold);
  }

  public void setConvexConvexMultipointIterations(int numPerturbationIterations) {
    BulletPINVOKE.btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_1(swigCPtr, numPerturbationIterations);
  }

  public void setConvexConvexMultipointIterations() {
    BulletPINVOKE.btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_2(swigCPtr);
  }

  public void setPlaneConvexMultipointIterations(int numPerturbationIterations, int minimumPointsPerturbationThreshold) {
    BulletPINVOKE.btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_0(swigCPtr, numPerturbationIterations, minimumPointsPerturbationThreshold);
  }

  public void setPlaneConvexMultipointIterations(int numPerturbationIterations) {
    BulletPINVOKE.btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_1(swigCPtr, numPerturbationIterations);
  }

  public void setPlaneConvexMultipointIterations() {
    BulletPINVOKE.btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_2(swigCPtr);
  }

}

}
