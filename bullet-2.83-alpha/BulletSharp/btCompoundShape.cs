//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btCompoundShape : btCollisionShape {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal btCompoundShape(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BulletPINVOKE.btCompoundShape_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btCompoundShape obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btCompoundShape() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btCompoundShape(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public btCompoundShape(bool enableDynamicAabbTree) : this(BulletPINVOKE.new_btCompoundShape__SWIG_0(enableDynamicAabbTree), true) {
  }

  public btCompoundShape() : this(BulletPINVOKE.new_btCompoundShape__SWIG_1(), true) {
  }

  public void addChildShape(btTransform localTransform, btCollisionShape shape) {
    BulletPINVOKE.btCompoundShape_addChildShape(swigCPtr, btTransform.getCPtr(localTransform), btCollisionShape.getCPtr(shape));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void removeChildShape(btCollisionShape shape) {
    BulletPINVOKE.btCompoundShape_removeChildShape(swigCPtr, btCollisionShape.getCPtr(shape));
  }

  public void removeChildShapeByIndex(int childShapeindex) {
    BulletPINVOKE.btCompoundShape_removeChildShapeByIndex(swigCPtr, childShapeindex);
  }

  public int getNumChildShapes() {
    int ret = BulletPINVOKE.btCompoundShape_getNumChildShapes(swigCPtr);
    return ret;
  }

  public btCollisionShape getChildShape(int index) {
    global::System.IntPtr cPtr = BulletPINVOKE.btCompoundShape_getChildShape__SWIG_0(swigCPtr, index);
    btCollisionShape ret = (cPtr == global::System.IntPtr.Zero) ? null : new btCollisionShape(cPtr, false);
    return ret;
  }

  public btTransform getChildTransform(int index) {
    btTransform ret = new btTransform(BulletPINVOKE.btCompoundShape_getChildTransform__SWIG_0(swigCPtr, index), false);
    return ret;
  }

  public void updateChildTransform(int childIndex, btTransform newChildTransform, bool shouldRecalculateLocalAabb) {
    BulletPINVOKE.btCompoundShape_updateChildTransform__SWIG_0(swigCPtr, childIndex, btTransform.getCPtr(newChildTransform), shouldRecalculateLocalAabb);
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public void updateChildTransform(int childIndex, btTransform newChildTransform) {
    BulletPINVOKE.btCompoundShape_updateChildTransform__SWIG_1(swigCPtr, childIndex, btTransform.getCPtr(newChildTransform));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public btCompoundShapeChild getChildList() {
    global::System.IntPtr cPtr = BulletPINVOKE.btCompoundShape_getChildList(swigCPtr);
    btCompoundShapeChild ret = (cPtr == global::System.IntPtr.Zero) ? null : new btCompoundShapeChild(cPtr, false);
    return ret;
  }

  public override void getAabb(btTransform t, btVector3 aabbMin, btVector3 aabbMax) {
    BulletPINVOKE.btCompoundShape_getAabb(swigCPtr, btTransform.getCPtr(t), btVector3.getCPtr(aabbMin), btVector3.getCPtr(aabbMax));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void recalculateLocalAabb() {
    BulletPINVOKE.btCompoundShape_recalculateLocalAabb(swigCPtr);
  }

  public override void setLocalScaling(btVector3 scaling) {
    BulletPINVOKE.btCompoundShape_setLocalScaling(swigCPtr, btVector3.getCPtr(scaling));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override btVector3 getLocalScaling() {
    btVector3 ret = new btVector3(BulletPINVOKE.btCompoundShape_getLocalScaling(swigCPtr), false);
    return ret;
  }

  public override void calculateLocalInertia(float mass, btVector3 inertia) {
    BulletPINVOKE.btCompoundShape_calculateLocalInertia(swigCPtr, mass, btVector3.getCPtr(inertia));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void setMargin(float margin) {
    BulletPINVOKE.btCompoundShape_setMargin(swigCPtr, margin);
  }

  public override float getMargin() {
    float ret = BulletPINVOKE.btCompoundShape_getMargin(swigCPtr);
    return ret;
  }

  public override string getName() {
    string ret = BulletPINVOKE.btCompoundShape_getName(swigCPtr);
    return ret;
  }

  public btDbvt getDynamicAabbTree() {
    global::System.IntPtr cPtr = BulletPINVOKE.btCompoundShape_getDynamicAabbTree__SWIG_0(swigCPtr);
    btDbvt ret = (cPtr == global::System.IntPtr.Zero) ? null : new btDbvt(cPtr, false);
    return ret;
  }

  public void createAabbTreeFromChildren() {
    BulletPINVOKE.btCompoundShape_createAabbTreeFromChildren(swigCPtr);
  }

  public void calculatePrincipalAxisTransform(SWIGTYPE_p_float masses, btTransform principal, btVector3 inertia) {
    BulletPINVOKE.btCompoundShape_calculatePrincipalAxisTransform(swigCPtr, SWIGTYPE_p_float.getCPtr(masses), btTransform.getCPtr(principal), btVector3.getCPtr(inertia));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public int getUpdateRevision() {
    int ret = BulletPINVOKE.btCompoundShape_getUpdateRevision(swigCPtr);
    return ret;
  }

  public override int calculateSerializeBufferSize() {
    int ret = BulletPINVOKE.btCompoundShape_calculateSerializeBufferSize(swigCPtr);
    return ret;
  }

  public override string serialize(SWIGTYPE_p_void dataBuffer, btSerializer serializer) {
    string ret = BulletPINVOKE.btCompoundShape_serialize(swigCPtr, SWIGTYPE_p_void.getCPtr(dataBuffer), btSerializer.getCPtr(serializer));
    return ret;
  }

}

}
