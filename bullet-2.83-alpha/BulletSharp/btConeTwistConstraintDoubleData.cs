//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btConeTwistConstraintDoubleData : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btConeTwistConstraintDoubleData(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btConeTwistConstraintDoubleData obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btConeTwistConstraintDoubleData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btConeTwistConstraintDoubleData(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public btTypedConstraintDoubleData m_typeConstraintData {
    set {
      BulletPINVOKE.btConeTwistConstraintDoubleData_m_typeConstraintData_set(swigCPtr, btTypedConstraintDoubleData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btConeTwistConstraintDoubleData_m_typeConstraintData_get(swigCPtr);
      btTypedConstraintDoubleData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btTypedConstraintDoubleData(cPtr, false);
      return ret;
    } 
  }

  public btTransformDoubleData m_rbAFrame {
    set {
      BulletPINVOKE.btConeTwistConstraintDoubleData_m_rbAFrame_set(swigCPtr, btTransformDoubleData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btConeTwistConstraintDoubleData_m_rbAFrame_get(swigCPtr);
      btTransformDoubleData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btTransformDoubleData(cPtr, false);
      return ret;
    } 
  }

  public btTransformDoubleData m_rbBFrame {
    set {
      BulletPINVOKE.btConeTwistConstraintDoubleData_m_rbBFrame_set(swigCPtr, btTransformDoubleData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btConeTwistConstraintDoubleData_m_rbBFrame_get(swigCPtr);
      btTransformDoubleData ret = (cPtr == global::System.IntPtr.Zero) ? null : new btTransformDoubleData(cPtr, false);
      return ret;
    } 
  }

  public double m_swingSpan1 {
    set {
      BulletPINVOKE.btConeTwistConstraintDoubleData_m_swingSpan1_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btConeTwistConstraintDoubleData_m_swingSpan1_get(swigCPtr);
      return ret;
    } 
  }

  public double m_swingSpan2 {
    set {
      BulletPINVOKE.btConeTwistConstraintDoubleData_m_swingSpan2_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btConeTwistConstraintDoubleData_m_swingSpan2_get(swigCPtr);
      return ret;
    } 
  }

  public double m_twistSpan {
    set {
      BulletPINVOKE.btConeTwistConstraintDoubleData_m_twistSpan_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btConeTwistConstraintDoubleData_m_twistSpan_get(swigCPtr);
      return ret;
    } 
  }

  public double m_limitSoftness {
    set {
      BulletPINVOKE.btConeTwistConstraintDoubleData_m_limitSoftness_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btConeTwistConstraintDoubleData_m_limitSoftness_get(swigCPtr);
      return ret;
    } 
  }

  public double m_biasFactor {
    set {
      BulletPINVOKE.btConeTwistConstraintDoubleData_m_biasFactor_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btConeTwistConstraintDoubleData_m_biasFactor_get(swigCPtr);
      return ret;
    } 
  }

  public double m_relaxationFactor {
    set {
      BulletPINVOKE.btConeTwistConstraintDoubleData_m_relaxationFactor_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btConeTwistConstraintDoubleData_m_relaxationFactor_get(swigCPtr);
      return ret;
    } 
  }

  public double m_damping {
    set {
      BulletPINVOKE.btConeTwistConstraintDoubleData_m_damping_set(swigCPtr, value);
    } 
    get {
      double ret = BulletPINVOKE.btConeTwistConstraintDoubleData_m_damping_get(swigCPtr);
      return ret;
    } 
  }

  public btConeTwistConstraintDoubleData() : this(BulletPINVOKE.new_btConeTwistConstraintDoubleData(), true) {
  }

}

}
