//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class CProfileManager : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CProfileManager(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CProfileManager obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CProfileManager() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_CProfileManager(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static void Start_Profile(string name) {
    BulletPINVOKE.CProfileManager_Start_Profile(name);
  }

  public static void Stop_Profile() {
    BulletPINVOKE.CProfileManager_Stop_Profile();
  }

  public static void CleanupMemory() {
    BulletPINVOKE.CProfileManager_CleanupMemory();
  }

  public static void Reset() {
    BulletPINVOKE.CProfileManager_Reset();
  }

  public static void Increment_Frame_Counter() {
    BulletPINVOKE.CProfileManager_Increment_Frame_Counter();
  }

  public static int Get_Frame_Count_Since_Reset() {
    int ret = BulletPINVOKE.CProfileManager_Get_Frame_Count_Since_Reset();
    return ret;
  }

  public static float Get_Time_Since_Reset() {
    float ret = BulletPINVOKE.CProfileManager_Get_Time_Since_Reset();
    return ret;
  }

  public static SWIGTYPE_p_CProfileIterator Get_Iterator() {
    global::System.IntPtr cPtr = BulletPINVOKE.CProfileManager_Get_Iterator();
    SWIGTYPE_p_CProfileIterator ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CProfileIterator(cPtr, false);
    return ret;
  }

  public static void Release_Iterator(SWIGTYPE_p_CProfileIterator iterator) {
    BulletPINVOKE.CProfileManager_Release_Iterator(SWIGTYPE_p_CProfileIterator.getCPtr(iterator));
  }

  public static void dumpRecursive(SWIGTYPE_p_CProfileIterator profileIterator, int spacing) {
    BulletPINVOKE.CProfileManager_dumpRecursive(SWIGTYPE_p_CProfileIterator.getCPtr(profileIterator), spacing);
  }

  public static void dumpAll() {
    BulletPINVOKE.CProfileManager_dumpAll();
  }

  public CProfileManager() : this(BulletPINVOKE.new_CProfileManager(), true) {
  }

}

}
