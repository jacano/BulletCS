//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btBroadphaseRayCallback : btBroadphaseAabbCallback {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal btBroadphaseRayCallback(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BulletPINVOKE.btBroadphaseRayCallback_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btBroadphaseRayCallback obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btBroadphaseRayCallback() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btBroadphaseRayCallback(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public btVector3 m_rayDirectionInverse {
    set {
      BulletPINVOKE.btBroadphaseRayCallback_m_rayDirectionInverse_set(swigCPtr, btVector3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btBroadphaseRayCallback_m_rayDirectionInverse_get(swigCPtr);
      btVector3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new btVector3(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_int m_signs {
    set {
      BulletPINVOKE.btBroadphaseRayCallback_m_signs_set(swigCPtr, SWIGTYPE_p_unsigned_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = BulletPINVOKE.btBroadphaseRayCallback_m_signs_get(swigCPtr);
      SWIGTYPE_p_unsigned_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_int(cPtr, false);
      return ret;
    } 
  }

  public float m_lambda_max {
    set {
      BulletPINVOKE.btBroadphaseRayCallback_m_lambda_max_set(swigCPtr, value);
    } 
    get {
      float ret = BulletPINVOKE.btBroadphaseRayCallback_m_lambda_max_get(swigCPtr);
      return ret;
    } 
  }

}

}
