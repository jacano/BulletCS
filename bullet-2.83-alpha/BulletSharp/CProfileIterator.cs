//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class CProfileIterator : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CProfileIterator(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CProfileIterator obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CProfileIterator() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_CProfileIterator(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public void First() {
    BulletPINVOKE.CProfileIterator_First(swigCPtr);
  }

  public void Next() {
    BulletPINVOKE.CProfileIterator_Next(swigCPtr);
  }

  public bool Is_Done() {
    bool ret = BulletPINVOKE.CProfileIterator_Is_Done(swigCPtr);
    return ret;
  }

  public bool Is_Root() {
    bool ret = BulletPINVOKE.CProfileIterator_Is_Root(swigCPtr);
    return ret;
  }

  public void Enter_Child(int index) {
    BulletPINVOKE.CProfileIterator_Enter_Child(swigCPtr, index);
  }

  public void Enter_Largest_Child() {
    BulletPINVOKE.CProfileIterator_Enter_Largest_Child(swigCPtr);
  }

  public void Enter_Parent() {
    BulletPINVOKE.CProfileIterator_Enter_Parent(swigCPtr);
  }

  public string Get_Current_Name() {
    string ret = BulletPINVOKE.CProfileIterator_Get_Current_Name(swigCPtr);
    return ret;
  }

  public int Get_Current_Total_Calls() {
    int ret = BulletPINVOKE.CProfileIterator_Get_Current_Total_Calls(swigCPtr);
    return ret;
  }

  public float Get_Current_Total_Time() {
    float ret = BulletPINVOKE.CProfileIterator_Get_Current_Total_Time(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_void Get_Current_UserPointer() {
    global::System.IntPtr cPtr = BulletPINVOKE.CProfileIterator_Get_Current_UserPointer(swigCPtr);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public void Set_Current_UserPointer(SWIGTYPE_p_void ptr) {
    BulletPINVOKE.CProfileIterator_Set_Current_UserPointer(swigCPtr, SWIGTYPE_p_void.getCPtr(ptr));
  }

  public string Get_Current_Parent_Name() {
    string ret = BulletPINVOKE.CProfileIterator_Get_Current_Parent_Name(swigCPtr);
    return ret;
  }

  public int Get_Current_Parent_Total_Calls() {
    int ret = BulletPINVOKE.CProfileIterator_Get_Current_Parent_Total_Calls(swigCPtr);
    return ret;
  }

  public float Get_Current_Parent_Total_Time() {
    float ret = BulletPINVOKE.CProfileIterator_Get_Current_Parent_Total_Time(swigCPtr);
    return ret;
  }

}

}
