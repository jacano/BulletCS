//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btConvexInternalShape : btConvexShape {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal btConvexInternalShape(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BulletPINVOKE.btConvexInternalShape_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btConvexInternalShape obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btConvexInternalShape() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btConvexInternalShape(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public override btVector3 localGetSupportingVertex(btVector3 vec) {
    btVector3 ret = new btVector3(BulletPINVOKE.btConvexInternalShape_localGetSupportingVertex(swigCPtr, btVector3.getCPtr(vec)), true);
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public btVector3 getImplicitShapeDimensions() {
    btVector3 ret = new btVector3(BulletPINVOKE.btConvexInternalShape_getImplicitShapeDimensions(swigCPtr), false);
    return ret;
  }

  public void setImplicitShapeDimensions(btVector3 dimensions) {
    BulletPINVOKE.btConvexInternalShape_setImplicitShapeDimensions(swigCPtr, btVector3.getCPtr(dimensions));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setSafeMargin(float minDimension, float defaultMarginMultiplier) {
    BulletPINVOKE.btConvexInternalShape_setSafeMargin__SWIG_0(swigCPtr, minDimension, defaultMarginMultiplier);
  }

  public void setSafeMargin(float minDimension) {
    BulletPINVOKE.btConvexInternalShape_setSafeMargin__SWIG_1(swigCPtr, minDimension);
  }

  public void setSafeMargin(btVector3 halfExtents, float defaultMarginMultiplier) {
    BulletPINVOKE.btConvexInternalShape_setSafeMargin__SWIG_2(swigCPtr, btVector3.getCPtr(halfExtents), defaultMarginMultiplier);
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setSafeMargin(btVector3 halfExtents) {
    BulletPINVOKE.btConvexInternalShape_setSafeMargin__SWIG_3(swigCPtr, btVector3.getCPtr(halfExtents));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void getAabb(btTransform t, btVector3 aabbMin, btVector3 aabbMax) {
    BulletPINVOKE.btConvexInternalShape_getAabb(swigCPtr, btTransform.getCPtr(t), btVector3.getCPtr(aabbMin), btVector3.getCPtr(aabbMax));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void getAabbSlow(btTransform t, btVector3 aabbMin, btVector3 aabbMax) {
    BulletPINVOKE.btConvexInternalShape_getAabbSlow(swigCPtr, btTransform.getCPtr(t), btVector3.getCPtr(aabbMin), btVector3.getCPtr(aabbMax));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void setLocalScaling(btVector3 scaling) {
    BulletPINVOKE.btConvexInternalShape_setLocalScaling(swigCPtr, btVector3.getCPtr(scaling));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override btVector3 getLocalScaling() {
    btVector3 ret = new btVector3(BulletPINVOKE.btConvexInternalShape_getLocalScaling(swigCPtr), false);
    return ret;
  }

  public btVector3 getLocalScalingNV() {
    btVector3 ret = new btVector3(BulletPINVOKE.btConvexInternalShape_getLocalScalingNV(swigCPtr), false);
    return ret;
  }

  public override void setMargin(float margin) {
    BulletPINVOKE.btConvexInternalShape_setMargin(swigCPtr, margin);
  }

  public override float getMargin() {
    float ret = BulletPINVOKE.btConvexInternalShape_getMargin(swigCPtr);
    return ret;
  }

  public float getMarginNV() {
    float ret = BulletPINVOKE.btConvexInternalShape_getMarginNV(swigCPtr);
    return ret;
  }

  public override int getNumPreferredPenetrationDirections() {
    int ret = BulletPINVOKE.btConvexInternalShape_getNumPreferredPenetrationDirections(swigCPtr);
    return ret;
  }

  public override void getPreferredPenetrationDirection(int index, btVector3 penetrationVector) {
    BulletPINVOKE.btConvexInternalShape_getPreferredPenetrationDirection(swigCPtr, index, btVector3.getCPtr(penetrationVector));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override int calculateSerializeBufferSize() {
    int ret = BulletPINVOKE.btConvexInternalShape_calculateSerializeBufferSize(swigCPtr);
    return ret;
  }

  public override string serialize(SWIGTYPE_p_void dataBuffer, btSerializer serializer) {
    string ret = BulletPINVOKE.btConvexInternalShape_serialize(swigCPtr, SWIGTYPE_p_void.getCPtr(dataBuffer), btSerializer.getCPtr(serializer));
    return ret;
  }

}

}
