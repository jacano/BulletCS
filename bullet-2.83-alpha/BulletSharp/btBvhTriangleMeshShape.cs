//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btBvhTriangleMeshShape : btTriangleMeshShape {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal btBvhTriangleMeshShape(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BulletPINVOKE.btBvhTriangleMeshShape_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btBvhTriangleMeshShape obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btBvhTriangleMeshShape() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btBvhTriangleMeshShape(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public btBvhTriangleMeshShape(btStridingMeshInterface meshInterface, bool useQuantizedAabbCompression, bool buildBvh) : this(BulletPINVOKE.new_btBvhTriangleMeshShape__SWIG_0(btStridingMeshInterface.getCPtr(meshInterface), useQuantizedAabbCompression, buildBvh), true) {
  }

  public btBvhTriangleMeshShape(btStridingMeshInterface meshInterface, bool useQuantizedAabbCompression) : this(BulletPINVOKE.new_btBvhTriangleMeshShape__SWIG_1(btStridingMeshInterface.getCPtr(meshInterface), useQuantizedAabbCompression), true) {
  }

  public btBvhTriangleMeshShape(btStridingMeshInterface meshInterface, bool useQuantizedAabbCompression, btVector3 bvhAabbMin, btVector3 bvhAabbMax, bool buildBvh) : this(BulletPINVOKE.new_btBvhTriangleMeshShape__SWIG_2(btStridingMeshInterface.getCPtr(meshInterface), useQuantizedAabbCompression, btVector3.getCPtr(bvhAabbMin), btVector3.getCPtr(bvhAabbMax), buildBvh), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public btBvhTriangleMeshShape(btStridingMeshInterface meshInterface, bool useQuantizedAabbCompression, btVector3 bvhAabbMin, btVector3 bvhAabbMax) : this(BulletPINVOKE.new_btBvhTriangleMeshShape__SWIG_3(btStridingMeshInterface.getCPtr(meshInterface), useQuantizedAabbCompression, btVector3.getCPtr(bvhAabbMin), btVector3.getCPtr(bvhAabbMax)), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool getOwnsBvh() {
    bool ret = BulletPINVOKE.btBvhTriangleMeshShape_getOwnsBvh(swigCPtr);
    return ret;
  }

  public void performRaycast(btTriangleCallback callback, btVector3 raySource, btVector3 rayTarget) {
    BulletPINVOKE.btBvhTriangleMeshShape_performRaycast(swigCPtr, btTriangleCallback.getCPtr(callback), btVector3.getCPtr(raySource), btVector3.getCPtr(rayTarget));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public void performConvexcast(btTriangleCallback callback, btVector3 boxSource, btVector3 boxTarget, btVector3 boxMin, btVector3 boxMax) {
    BulletPINVOKE.btBvhTriangleMeshShape_performConvexcast(swigCPtr, btTriangleCallback.getCPtr(callback), btVector3.getCPtr(boxSource), btVector3.getCPtr(boxTarget), btVector3.getCPtr(boxMin), btVector3.getCPtr(boxMax));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void processAllTriangles(btTriangleCallback callback, btVector3 aabbMin, btVector3 aabbMax) {
    BulletPINVOKE.btBvhTriangleMeshShape_processAllTriangles(swigCPtr, btTriangleCallback.getCPtr(callback), btVector3.getCPtr(aabbMin), btVector3.getCPtr(aabbMax));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public void refitTree(btVector3 aabbMin, btVector3 aabbMax) {
    BulletPINVOKE.btBvhTriangleMeshShape_refitTree(swigCPtr, btVector3.getCPtr(aabbMin), btVector3.getCPtr(aabbMax));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public void partialRefitTree(btVector3 aabbMin, btVector3 aabbMax) {
    BulletPINVOKE.btBvhTriangleMeshShape_partialRefitTree(swigCPtr, btVector3.getCPtr(aabbMin), btVector3.getCPtr(aabbMax));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override string getName() {
    string ret = BulletPINVOKE.btBvhTriangleMeshShape_getName(swigCPtr);
    return ret;
  }

  public override void setLocalScaling(btVector3 scaling) {
    BulletPINVOKE.btBvhTriangleMeshShape_setLocalScaling(swigCPtr, btVector3.getCPtr(scaling));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public btOptimizedBvh getOptimizedBvh() {
    global::System.IntPtr cPtr = BulletPINVOKE.btBvhTriangleMeshShape_getOptimizedBvh(swigCPtr);
    btOptimizedBvh ret = (cPtr == global::System.IntPtr.Zero) ? null : new btOptimizedBvh(cPtr, false);
    return ret;
  }

  public void setOptimizedBvh(btOptimizedBvh bvh, btVector3 localScaling) {
    BulletPINVOKE.btBvhTriangleMeshShape_setOptimizedBvh__SWIG_0(swigCPtr, btOptimizedBvh.getCPtr(bvh), btVector3.getCPtr(localScaling));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setOptimizedBvh(btOptimizedBvh bvh) {
    BulletPINVOKE.btBvhTriangleMeshShape_setOptimizedBvh__SWIG_1(swigCPtr, btOptimizedBvh.getCPtr(bvh));
  }

  public void buildOptimizedBvh() {
    BulletPINVOKE.btBvhTriangleMeshShape_buildOptimizedBvh(swigCPtr);
  }

  public bool usesQuantizedAabbCompression() {
    bool ret = BulletPINVOKE.btBvhTriangleMeshShape_usesQuantizedAabbCompression(swigCPtr);
    return ret;
  }

  public void setTriangleInfoMap(btTriangleInfoMap triangleInfoMap) {
    BulletPINVOKE.btBvhTriangleMeshShape_setTriangleInfoMap(swigCPtr, btTriangleInfoMap.getCPtr(triangleInfoMap));
  }

  public btTriangleInfoMap getTriangleInfoMap() {
    global::System.IntPtr cPtr = BulletPINVOKE.btBvhTriangleMeshShape_getTriangleInfoMap__SWIG_0(swigCPtr);
    btTriangleInfoMap ret = (cPtr == global::System.IntPtr.Zero) ? null : new btTriangleInfoMap(cPtr, false);
    return ret;
  }

  public override int calculateSerializeBufferSize() {
    int ret = BulletPINVOKE.btBvhTriangleMeshShape_calculateSerializeBufferSize(swigCPtr);
    return ret;
  }

  public override string serialize(SWIGTYPE_p_void dataBuffer, btSerializer serializer) {
    string ret = BulletPINVOKE.btBvhTriangleMeshShape_serialize(swigCPtr, SWIGTYPE_p_void.getCPtr(dataBuffer), btSerializer.getCPtr(serializer));
    return ret;
  }

  public virtual void serializeSingleBvh(btSerializer serializer) {
    BulletPINVOKE.btBvhTriangleMeshShape_serializeSingleBvh(swigCPtr, btSerializer.getCPtr(serializer));
  }

  public virtual void serializeSingleTriangleInfoMap(btSerializer serializer) {
    BulletPINVOKE.btBvhTriangleMeshShape_serializeSingleTriangleInfoMap(swigCPtr, btSerializer.getCPtr(serializer));
  }

}

}
