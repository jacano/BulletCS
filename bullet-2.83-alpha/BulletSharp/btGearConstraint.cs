//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BulletSharp {

public class btGearConstraint : btTypedConstraint {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal btGearConstraint(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BulletPINVOKE.btGearConstraint_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btGearConstraint obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btGearConstraint() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BulletPINVOKE.delete_btGearConstraint(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public btGearConstraint(btRigidBody rbA, btRigidBody rbB, btVector3 axisInA, btVector3 axisInB, float ratio) : this(BulletPINVOKE.new_btGearConstraint__SWIG_0(btRigidBody.getCPtr(rbA), btRigidBody.getCPtr(rbB), btVector3.getCPtr(axisInA), btVector3.getCPtr(axisInB), ratio), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public btGearConstraint(btRigidBody rbA, btRigidBody rbB, btVector3 axisInA, btVector3 axisInB) : this(BulletPINVOKE.new_btGearConstraint__SWIG_1(btRigidBody.getCPtr(rbA), btRigidBody.getCPtr(rbB), btVector3.getCPtr(axisInA), btVector3.getCPtr(axisInB)), true) {
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void getInfo1(btTypedConstraint.btConstraintInfo1 info) {
    BulletPINVOKE.btGearConstraint_getInfo1(swigCPtr, btTypedConstraint.btConstraintInfo1.getCPtr(info));
  }

  public override void getInfo2(btTypedConstraint.btConstraintInfo2 info) {
    BulletPINVOKE.btGearConstraint_getInfo2(swigCPtr, btTypedConstraint.btConstraintInfo2.getCPtr(info));
  }

  public void setAxisA(btVector3 axisA) {
    BulletPINVOKE.btGearConstraint_setAxisA(swigCPtr, btVector3.getCPtr(axisA));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setAxisB(btVector3 axisB) {
    BulletPINVOKE.btGearConstraint_setAxisB(swigCPtr, btVector3.getCPtr(axisB));
    if (BulletPINVOKE.SWIGPendingException.Pending) throw BulletPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setRatio(float ratio) {
    BulletPINVOKE.btGearConstraint_setRatio(swigCPtr, ratio);
  }

  public btVector3 getAxisA() {
    btVector3 ret = new btVector3(BulletPINVOKE.btGearConstraint_getAxisA(swigCPtr), false);
    return ret;
  }

  public btVector3 getAxisB() {
    btVector3 ret = new btVector3(BulletPINVOKE.btGearConstraint_getAxisB(swigCPtr), false);
    return ret;
  }

  public float getRatio() {
    float ret = BulletPINVOKE.btGearConstraint_getRatio(swigCPtr);
    return ret;
  }

  public override void setParam(int num, float value, int axis) {
    BulletPINVOKE.btGearConstraint_setParam__SWIG_0(swigCPtr, num, value, axis);
  }

  public override void setParam(int num, float value) {
    BulletPINVOKE.btGearConstraint_setParam__SWIG_1(swigCPtr, num, value);
  }

  public override float getParam(int num, int axis) {
    float ret = BulletPINVOKE.btGearConstraint_getParam__SWIG_0(swigCPtr, num, axis);
    return ret;
  }

  public override float getParam(int num) {
    float ret = BulletPINVOKE.btGearConstraint_getParam__SWIG_1(swigCPtr, num);
    return ret;
  }

  public override int calculateSerializeBufferSize() {
    int ret = BulletPINVOKE.btGearConstraint_calculateSerializeBufferSize(swigCPtr);
    return ret;
  }

  public override string serialize(SWIGTYPE_p_void dataBuffer, btSerializer serializer) {
    string ret = BulletPINVOKE.btGearConstraint_serialize(swigCPtr, SWIGTYPE_p_void.getCPtr(dataBuffer), btSerializer.getCPtr(serializer));
    return ret;
  }

}

}
